version: 0.2

env:
  variables:
    TF_IN_AUTOMATION: true
    TF_INPUT: 0
    TF_VAR_owner_email: pttp@justice.gov.uk
    TF_VAR_enable_critical_notifications: true
    TF_VAR_enable_cloudtrail_log_shipping_to_cloudwatch: true
    TF_VAR_enable_shared_services_log_destination: true
    TF_VAR_enable_transit_gateway_attachment: true
    TF_VAR_enable_api_gateway_custom_domain: true
    TF_VAR_enable_api_gateway_logs: true
    TF_VAR_enable_syslog_endpoint_load_test: false
    TF_VAR_env: ${ENV}
  parameter-store:
    TF_VAR_enable_peering:                   "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/enable_peering"
    TF_VAR_assume_role:                      "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/assume_role"
    TF_VAR_logging_cidr_block:               "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/logging_cidr_block"
    TF_VAR_syslog_receiver_cidr_block:       "/staff-device/$ENV/syslog_receiver_cidr_block"
    TF_VAR_ost_vpc_id:                       "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_vpc_id"
    TF_VAR_ost_aws_account_id:               "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_aws_account_id"
    TF_VAR_vpn_hosted_zone_id:               "/codebuild/$ENV/vpn_hosted_zone_id"
    TF_VAR_ost_vpc_cidr_block:               "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_vpc_cidr_block"
    TF_VAR_ost_username:                     "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_username"
    TF_VAR_ost_password:                     "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_password"
    TF_VAR_ost_url:                          "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/ost_url"
    TF_VAR_ost_logstash_url:                 "/codebuild/pttp-ci-infrastructure-core-pipeline/development/ost_logstash_url"
    TF_VAR_critical_notification_recipients: "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/critical_notification_recipients"
    TF_VAR_api_gateway_custom_domain:        "/staff-device/$ENV/logging/api_gateway_domain_name"
    # function beats related config
    ROLE_ARN:                                "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/assume_role"
    OST_KEY:                                 "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/moj.key"
    OST_CRT:                                 "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/moj.crt"
    OST_CA_CRT:                              "/codebuild/pttp-ci-infrastructure-core-pipeline/$ENV/elk-ca.crt"
    TF_VAR_syslog_load_balancer_private_ip_eu_west_2a: "/staff-device/syslog/$ENV/load_balancer_private_ip_eu_west_2a"
    TF_VAR_syslog_load_balancer_private_ip_eu_west_2b: "/staff-device/syslog/$ENV/load_balancer_private_ip_eu_west_2b"
    TF_VAR_syslog_load_balancer_private_ip_eu_west_2c: "/staff-device/syslog/$ENV/load_balancer_private_ip_eu_west_2c"
    TF_VAR_transit_gateway_id:                "/staff-device/dhcp/$ENV/transit_gateway_id"
    TF_VAR_transit_gateway_route_table_id:    "/staff-device/dhcp/$ENV/transit_gateway_route_table_id"

phases:
  install:
    commands:
      - ./scripts/install_terraform
      - ./scripts/install_functionbeat

  build:
    commands:
      - export AWS_DEFAULT_REGION=eu-west-2
      - terraform init -no-color --backend-config="key=terraform.$ENV.state" -reconfigure -upgrade
      - terraform workspace new $ENV || true
      - terraform workspace select $ENV
      - terraform init -no-color --backend-config="key=terraform.$ENV.state"
      - terraform apply --auto-approve -no-color

      - ./scripts/publish_terraform_outputs

      - TEMP_ROLE=`aws sts assume-role --role-arn $ROLE_ARN --role-session-name ci-build-$CODEBUILD_BUILD_NUMBER`
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')

      - ./scripts/deploy_functionbeat
      - ./scripts/ensure_cloudwatch_log_retention_policies.sh
